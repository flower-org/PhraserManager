// automatically generated by the FlatBuffers compiler, do not modify

package com.phraser.schema.phraser;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Folder extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Folder getRootAsFolder(ByteBuffer _bb) { return getRootAsFolder(_bb, new Folder()); }
  public static Folder getRootAsFolder(ByteBuffer _bb, Folder obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Folder __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int folderId() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public boolean mutateFolderId(int folder_id) { int o = __offset(4); if (o != 0) { bb.putShort(o + bb_pos, (short) folder_id); return true; } else { return false; } }
  public int parentFolderId() { int o = __offset(6); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public boolean mutateParentFolderId(int parent_folder_id) { int o = __offset(6); if (o != 0) { bb.putShort(o + bb_pos, (short) parent_folder_id); return true; } else { return false; } }
  public String folderName() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer folderNameAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer folderNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createFolder(FlatBufferBuilder builder,
      int folderId,
      int parentFolderId,
      int folderNameOffset) {
    builder.startTable(3);
    Folder.addFolderName(builder, folderNameOffset);
    Folder.addParentFolderId(builder, parentFolderId);
    Folder.addFolderId(builder, folderId);
    return Folder.endFolder(builder);
  }

  public static void startFolder(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addFolderId(FlatBufferBuilder builder, int folderId) { builder.addShort(0, (short) folderId, (short) 0); }
  public static void addParentFolderId(FlatBufferBuilder builder, int parentFolderId) { builder.addShort(1, (short) parentFolderId, (short) 0); }
  public static void addFolderName(FlatBufferBuilder builder, int folderNameOffset) { builder.addOffset(2, folderNameOffset, 0); }
  public static int endFolder(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Folder get(int j) { return get(new Folder(), j); }
    public Folder get(Folder obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

