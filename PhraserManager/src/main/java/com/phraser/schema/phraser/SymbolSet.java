// automatically generated by the FlatBuffers compiler, do not modify

package com.phraser.schema.phraser;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class SymbolSet extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static SymbolSet getRootAsSymbolSet(ByteBuffer _bb) { return getRootAsSymbolSet(_bb, new SymbolSet()); }
  public static SymbolSet getRootAsSymbolSet(ByteBuffer _bb, SymbolSet obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SymbolSet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int setId() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public boolean mutateSetId(int set_id) { int o = __offset(4); if (o != 0) { bb.putShort(o + bb_pos, (short) set_id); return true; } else { return false; } }
  public String symbolSetName() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer symbolSetNameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer symbolSetNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String symbolSet() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer symbolSetAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer symbolSetInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createSymbolSet(FlatBufferBuilder builder,
      int setId,
      int symbolSetNameOffset,
      int symbolSetOffset) {
    builder.startTable(3);
    SymbolSet.addSymbolSet(builder, symbolSetOffset);
    SymbolSet.addSymbolSetName(builder, symbolSetNameOffset);
    SymbolSet.addSetId(builder, setId);
    return SymbolSet.endSymbolSet(builder);
  }

  public static void startSymbolSet(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addSetId(FlatBufferBuilder builder, int setId) { builder.addShort(0, (short) setId, (short) 0); }
  public static void addSymbolSetName(FlatBufferBuilder builder, int symbolSetNameOffset) { builder.addOffset(1, symbolSetNameOffset, 0); }
  public static void addSymbolSet(FlatBufferBuilder builder, int symbolSetOffset) { builder.addOffset(2, symbolSetOffset, 0); }
  public static int endSymbolSet(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SymbolSet get(int j) { return get(new SymbolSet(), j); }
    public SymbolSet get(SymbolSet obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

