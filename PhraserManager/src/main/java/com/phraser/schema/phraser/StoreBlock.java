// automatically generated by the FlatBuffers compiler, do not modify

package com.phraser.schema.phraser;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class StoreBlock extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public StoreBlock __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int blockId() { return bb.getShort(bb_pos + 0) & 0xFFFF; }
  public void mutateBlockId(int block_id) { bb.putShort(bb_pos + 0, (short) block_id); }
  public long version() { return (long)bb.getInt(bb_pos + 4) & 0xFFFFFFFFL; }
  public void mutateVersion(long version) { bb.putInt(bb_pos + 4, (int) version); }
  public byte type() { return bb.get(bb_pos + 8); }
  public void mutateType(byte type) { bb.put(bb_pos + 8, type); }
  public long entropy() { return bb.getLong(bb_pos + 16); }
  public void mutateEntropy(long entropy) { bb.putLong(bb_pos + 16, entropy); }

  public static int createStoreBlock(FlatBufferBuilder builder, int blockId, long version, byte type, long entropy) {
    builder.prep(8, 24);
    builder.putLong(entropy);
    builder.pad(7);
    builder.putByte(type);
    builder.putInt((int) version);
    builder.pad(2);
    builder.putShort((short) blockId);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public StoreBlock get(int j) { return get(new StoreBlock(), j); }
    public StoreBlock get(StoreBlock obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

