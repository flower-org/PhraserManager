// automatically generated by the FlatBuffers compiler, do not modify

package com.phraser.schema.phraser;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class StorePhraseHistory extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static StorePhraseHistory getRootAsStorePhraseHistory(ByteBuffer _bb) { return getRootAsStorePhraseHistory(_bb, new StorePhraseHistory()); }
  public static StorePhraseHistory getRootAsStorePhraseHistory(ByteBuffer _bb, StorePhraseHistory obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public StorePhraseHistory __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public StoreWordValue wordValues(int j) { return wordValues(new StoreWordValue(), j); }
  public StoreWordValue wordValues(StoreWordValue obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int wordValuesLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public StoreWordValue.Vector wordValuesVector() { return wordValuesVector(new StoreWordValue.Vector()); }
  public StoreWordValue.Vector wordValuesVector(StoreWordValue.Vector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createStorePhraseHistory(FlatBufferBuilder builder,
      int wordValuesOffset) {
    builder.startTable(1);
    StorePhraseHistory.addWordValues(builder, wordValuesOffset);
    return StorePhraseHistory.endStorePhraseHistory(builder);
  }

  public static void startStorePhraseHistory(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addWordValues(FlatBufferBuilder builder, int wordValuesOffset) { builder.addOffset(0, wordValuesOffset, 0); }
  public static int createWordValuesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startWordValuesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endStorePhraseHistory(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public StorePhraseHistory get(int j) { return get(new StorePhraseHistory(), j); }
    public StorePhraseHistory get(StorePhraseHistory obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

